{% extends "layout.njk" %}
{% block content %}
  <div class="d-flex justify-content-between">
    <h3>{{ sport.name }}</h3>
    <div class="d-flex align-items-center gap-2">
      <button class="btn btn-large btn-primary" data-bs-toggle="modal" data-bs-target="#newSessionModal">Host a session</button>
      {% if user.role === "ADMIN" %}
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#sportEditModal">
          <i class="bi bi-pencil"></i>
        </button>
        <button type="submit" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#sportDeleteModal">
          <i class="bi bi-trash"></i>
        </button>
      {% endif %}
    </div>
  </div>
  {% if user.role === "ADMIN" %}
    <div class="modal fade" id="sportEditModal">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Edit Sport</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
          </div>
          <form action="/sport/{{ sport.id }}?_method=PUT" method="post">
            <div class="modal-body">
              <label for="name" class="form-label">Name</label>
              <input type="text" name="name" value="{{ sport.name }}" id="name" class="form-control">
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
              <input type="submit" value="Save" class="btn btn-primary">
            </div>
          </form>
        </div>
      </div>
    </div>
    <div class="modal fade" id="sportDeleteModal">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5>Delete Sport</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
          </div>
          <div class="modal-body">
            <p>Are you sure you want to delete this sport?</p>
          </div>
          <div class="modal-footer">
            <form action="/sport/{{ sport.id }}?_method=DELETE" method="post">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
              <input type="submit" value="Delete" class="btn btn-danger">
            </form>
          </div>
        </div>
      </div>
    </div>

  {% endif %}

  <div class="modal fade" id="newSessionModal">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5>New Session</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <form action="/sport/{{ sport.id }}/session" method="post" id="newSessionForm">
          <div class="modal-body">
            <div class="mb-2">
              <label for="session-name" class="form-label">Name</label>
              <input type="text" name="name" id="session-name" class="form-control">
            </div>
            <div class="mb-2">
              <label for="venue" class="form-label">Venue</label>
              <input type="text" name="venue" id="venue" class="form-control">
            </div>
            <div class="mb-2">
              <label for="totalSlots" class="form-label">Number of slots</label>
              <input type="number" id="totalSlots" name="totalSlots" class="form-control">
            </div>
            <div class="mb-2">
              <label for="startsAt" class="form-label">Sessions starts at</label>
              <input type="datetime-local" id="startsAt" name="startsAt" class="form-control">
            </div>
            <div class="mb-2">
              <label for="endsAt" class="form-label">Session ends at</label>
              <input type="datetime-local" id="endsAt" name="endsAt" class="form-control">
            </div>
            <div>
              <label for="searchUserInput" class="form-label d-block">
                <div class="d-flex justify-content-between">
                  <span>
                    Add Participants
                  </span>
                  <span class="badge text-bg-dark" id="participantsCount"></span>
                </div>
              </label>
              <div class="input-group">
                <span class="input-group-text">
                  <i class="bi bi-search"></i>
                </span>
                <input type="text" class="form-control" id="searchUserInput" placeholder="Search user by name or email">
              </div>
              <div id="searchResults"></div>
            </div>
            <div class="mt-2">
              <label class="form-label">
                <span class="fw-bold">Participants</span></label>
              <div id="addedUsers"></div>
            </div>
            <input type="hidden" name="participants" id="usersHiddenInput">
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <input type="submit" value="Add" class="btn btn-primary">
          </div>
        </div>
      </div>
    </div>
    <script>
      addedUsers = [];
      searchResults = [];
      const addUser = (id) => {
        const user = searchResults.find(u => u.id === id);
        if (parseInt(document.querySelector("#totalSlots").value) <= addedUsers.length) {
          alert("No more slots available");
          return;
        }
        addedUsers.push(user);
        updateAddedUsers();
        updateDom();
      };
      const removeUser = (id) => {
        addedUsers = addedUsers.filter(u => u.id !== id);
        updateAddedUsers();
        updateDom();
      };
      document
        .querySelector("#totalSlots")
        .addEventListener("change", () => {
          if (parseInt(document.querySelector("#totalSlots").value) < addedUsers.length) {
            alert("Added users are more than the total slots available, please remove some users first");
            document
              .querySelector("#totalSlots")
              .value = addedUsers.length;
          }
          updateDom();
          updateAddedUsers();
        });
      const updateAddedUsers = () => {
        const au = document.querySelector("#addedUsers");
        const totalSlots = parseInt(document.querySelector("#totalSlots").value);
        au.innerHTML = addedUsers.length > 0
          ? addedUsers
            .map(user => {
              return `
            <div class="d-flex align-items-center gap-2 py-2 justify-content-between">
              <span>${user.firstName} ${user.lastName
                ? user.lastName
                : ""} (${user.email})</span> 
              <button type="button" class="btn btn-link text-danger" onclick="removeUser(${user.id})">Remove</button>
            </div>
          `;
            })
            .join("")
          : `<span class="fst-italic">No added participants</span>`;
        document
          .querySelector("#usersHiddenInput")
          .value = JSON.stringify(addedUsers.map(u => u.id));
        document
          .querySelector("#participantsCount")
          .innerHTML = totalSlots
            ? `${addedUsers.length}/${totalSlots}`
            : addedUsers.length;
      }
      const updateDom = (loading) => {
        const sr = document.querySelector("#searchResults");
        if (loading) {
          sr.innerHTML = `<div class="d-flex justify-content-center">
                            <div class="spinner-border" role="status">
                              <span class="visually-hidden">Loading...</span>
                            </div>
                          </div>`;
          return;
        }
        sr.innerHTML = searchResults
          .filter(u => !addedUsers.find(au => au.id === u.id))
          .map(user => {
            return `
            <div class="d-flex align-items-center gap-2 py-2 justify-content-between">
              <span>${user.firstName} ${user.lastName
              ? user.lastName
              : ""} (${user.email})</span> 
              <button type="button" class="btn btn-link" onclick="addUser(${user.id})">Add</button>
            </div>
          `;
          })
          .join("");
      };
      updateAddedUsers();
      updateDom();
      const debounce = (fn, delay) => {
        let timer;
        return function (e) {
          clearTimeout(timer);
          timer = setTimeout(async () => {
            await fn(e);
          }, delay);
        };
      };

      const searchUserInput = document.querySelector("#searchUserInput");
      searchUserInput.addEventListener("input", debounce(async (e) => {
        if (e.target.value.length < 3) 
          return;
        updateDom(true);
        const response = await fetch(`/api/user?search=${e.target.value}`);
        const users = await response.json();
        searchResults = users;
        updateDom();
      }, 500));
    </script>
    <h3>Upcoming Sessions</h3>
    <ul>
      {% for session in sport.sessions %}
        <li>
          <a href="/sport/{{ sport.id }}/session/{{ session.id }}">{{ session.name }}</a>
        </li>
      {% endfor %}
    </ul>
  {% endblock %}